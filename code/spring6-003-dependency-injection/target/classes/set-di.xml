<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="myMathBean" class="bean.MyMath">
        <!--第一种方案使用实体符号代替-->
<!--        <property name="result" value="2 < 3"/>-->
<!--        <property name="result" value="2 &lt; 3"/>-->

        <!--第二种方案使用<![CDATA[]]>-->
        <!--只能用value标签-->
        <property name="result">
            <value><![CDATA[2 < 3]]></value>
        </property>
    </bean>

    <bean id="catBean" class="bean.Cat">
        <!--如果不对属性赋值,属性默认就是空-->
<!--        <property name="name" value="tom"/>-->
        <!--如果写null,相当于把null当做字符串传入了-->
<!--        <property name="name" value="null"/>-->
        <!--如果要手动赋空, 使用null标签-->
<!--        <property name="name">-->
<!--            <null/>-->
<!--        </property>-->

        <!--注入空字符串,value不写内容,自动是空字符串-->
<!--        <property name="name" value=""/>-->
        <!--手动注入空字符串-->
        <property name="name">
            <value/>
        </property>
        <property name="age" value="2"/>
    </bean>

    <bean id="myDataSourceBean" class="jdbc.MyDataSource">
        <property name="driver" value="com.mysql.jdbc.driver"/>
        <property name="url" value="mysql://localhost:3306/powernode"/>
        <property name="user" value="root"/>
        <property name="password" value="hsp"/>
    </bean>

    <bean id="svtBean" class="bean.SimpleValueType">
        <!--报错了.说2023-12-3这个字符串无法转换成java.util.Date-->
        <!--<property name="birth" value="2023-12-3"/>-->
        <!--如果你硬要把Date当作简单类型的话,使用value赋值的话,这个日期字符串格式有要求Sun Dec 03 17:38:19 CST 2023-->
        <!--在实际开发中,一般不会把Date当作简单类型,虽然他是简单类型-->
        <property name="birth" value="Sun Dec 03 17:38:19 CST 2023"/>
    </bean>

    <!--注入简单类型-->
    <bean id="userBean" class="bean.User">
        <!--重点:如果是给简单类型赋值,就不能使用ref了. 就需要使用value-->
        <property name="username" value="张三"/>
        <property name="password" value="10086"/>
        <property name="age" value="20"/>
    </bean>

    <bean id="orderDaoBean" class="dao.OrderDao"/>
    <bean id="orderServiceBean" class="service.OrderService">
        <!--使用ref属性来引入.这就是注入外部bean-->
        <property name="orderDao" ref="orderDaoBean"/>
    </bean>

    <bean id="orderServiceBean2" class="service.OrderService">
        <property name="orderDao">
            <bean class="dao.OrderDao"/>
        </property>
    </bean>
</beans>